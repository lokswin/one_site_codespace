networks:
  app_net:
    driver: bridge
  monitor_net:
    driver: bridge
  db_net:
    driver: bridge

services:
  guacd_server:
    image: guacamole/guacd:1.5.5
    container_name: ${GUACD_HOSTNAME:-guacd_server}
    environment:
      - GUACD_LOG_LEVEL=${DEBUG_LEVEL:-debug}
      - HOSTNAME=${GUACD_HOSTNAME:-guacd_server}
      - POSTGRESQL_USER=${POSTGRESQL_USER:-P0G_Us3}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD:-P2g_Pwd2}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE:-guacamole_db}
      - POSTGRESQL_HOSTNAME=${POSTGRESQL_HOSTNAME:-pds3ql_serFver}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    ports:
      - "${GUACD_PORT:-4822}:${GUACD_PORT:-4822}"
    networks:
      - app_net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

  guacd_web:
    image: guacamole/guacamole:1.5.5
    container_name: ${GUACD_WEB_HOSTNAME:-guacd_web}
    environment:
      - GUAC_USER=${GUAC_USER:-my_guac_u}
      - GUAC_PASS=${GUAC_PASS:-My_guacd_pwd9}
      - TOTP_SECRET_KEY=${TOTP_SECRET_KEY:-My_totp_k2}
      - VNC_HOSTNAME=${VNC_HOSTNAME:-localhost}
      - VNC_PORT=${VNC_PORT:-7777}
      - GUACD_HOSTNAME=${GUACD_HOSTNAME:-guacd_server}
      - GUACD_PORT=${GUACD_PORT:-4822}
      - DISPLAY_GUACD=${DISPLAY_GUACD:-21}
      - DEBUG_ALL=${DEBUG_ALL:-true}
      - POSTGRESQL_USER=${POSTGRESQL_USER:-P0G_Us3}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD:-P2g_Pwd2}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE:-guacamole_db}
      - POSTGRESQL_HOSTNAME=${POSTGRESQL_HOSTNAME:-pds3ql_serFver}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    volumes:
      - ./config/custom_guac/logback.xml:/etc/guacamole/logback.xml
      - ./config/custom_guac/guacamole.properties:/etc/guacamole/guacamole.properties
      - ./config/custom_guac/extensions/guacamole-auth-totp-1.5.5.jar:/etc/guacamole/extensions/guacamole-auth-totp-1.5.5.jar
    ports:
      - "${WEB_PORT:-8080}:${WEB_PORT:-8080}"
    networks:
      - app_net
    depends_on:
      - guacd_server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

  psql_server:
    image: postgres:17
    container_name: ${POSTGRESQL_HOSTNAME:-pds3ql_serFver}
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER:-P0G_Us3}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD:-P2g_Pwd2}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE:-guacamole_db}
      - HOSTNAME=${POSTGRESQL_HOSTNAME:-pds3ql_serFver}
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    networks:
      - db_net
    depends_on:
      - guacd_server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

# SRE
# host machine metrics
  node_exporter:
    image: bitnami/node-exporter:1.8.2
    container_name: ${NODE_EX_HOSTNAME:-node_exporter}
    ports:
      - "${NODE_EX_PORT:-9100}:${NODE_EX_PORT:-9100}"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)' 
    networks:
      - monitor_net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

# container-level metrics
  telegraf_collect:
    image: telegraf:1.32.3
    container_name: ${TELEG_HOSTNAME:-telegraf_collect}
    environment:
      #- SCRAPE_URI=http://localhost:2375
      - "SCRAPE_URI=${T_SCRAPE_URI:-http://localhost}:${T_SCRAPE_PORT:-2375}"
    ports:
      - "${TELEG_PORT:-9324}:${TELEG_PORT:-9323}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
      - monitor_net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

# scrapes data from exporters
  prometheus:
    image: bitnami/prometheus:3.0.0
    container_name: ${PROMET_HOSTNAME:-prometheus}
    environment:
      - NODE_EX_HOSTNAME=${NODE_EX_HOSTNAME:-node_exporter}
      - NODE_EX_PORT=${NODE_EX_PORT:-9100}
      - TELEG_HOSTNAME=${TELEG_HOSTNAME:-telegraf_collect}
      - TELEG_PORT=${TELEG_PORT:-9323}
      - GUACD_HOSTNAME=${GUACD_HOSTNAME:-guacd_server}
      - GUACD_PORT=${GUACD_PORT:-4822}
      - GUACD_WEB_HOSTNAME=${GUACD_WEB_HOSTNAME:-guacd_web}
      - WEB_PORT=${WEB_PORT:-8080}
      - POSTGRESQL_HOSTNAME=${POSTGRESQL_HOSTNAME:-pds3ql_serFver}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - PROMET_PORT=${PROMET_PORT:-9090}
      - "PROMET_HEALTH=http://${PROMET_HOSTNAME:-localhost}:${PROMET_PORT:-9090}"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMET_PORT:-9090}:${PROMET_PORT:-9090}"
    networks:
      - monitor_net
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "${PROMET_HEALTH:-http://localhost:9090}/-/ready"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"

# monitoring visual
  grafana:
    image: grafana/grafana:11.3.1
    container_name: ${GRAFANA_HOSTNAME:-grafana}
    volumes:
      - ./config/grafana/provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./config/grafana/dashboards/dash1.json:/var/lib/grafana/dashboards/dash1.json
      - ./config/grafana/dashboards/dash_doc_sys_mon.json:/var/lib/grafana/dashboards/dash_doc_sys_mon.json
      - ./config/grafana/dashboards/dash_grafana_stats.json:/var/lib/grafana/dashboards/dash_grafana_stats.json
      - ./config/grafana/dashboards/dash_node_ex.json:/var/lib/grafana/dashboards/dash_node_ex.json
      - ./config/grafana/dashboards/dash_promet.json:/var/lib/grafana/dashboards/dash_promet.json
      - ./config/grafana/dashboards/dash_sql.json:/var/lib/grafana/dashboards/dash_sql.json
      - ./config/grafana/dashboards/dash_telegraf.json:/var/lib/grafana/dashboards/dash_telegraf.json
    ports:
      - "${GRAFANA_PORT:-3000}:${GRAFANA_PORT:-3000}"
    networks:
      - monitor_net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "4"
